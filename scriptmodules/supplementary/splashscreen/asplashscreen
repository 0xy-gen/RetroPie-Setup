#!/bin/sh

### BEGIN INIT INFO
# Provides:          asplashscreen
# Required-Start:    mountdevsubfs
# Required-Stop:
# Default-Start:     S
# X-Start-Before:    checkroot
# Default-Stop:
# Short-Description: Show custom splashscreen
# Description:       Show custom splashscreen
### END INIT INFO

RANDOMIZE="disabled"
REGEX_VIDEO=""
REGEX_IMAGE=""

do_start () {
    local config="/etc/splashscreen.list"
    local rootdir="/opt/retropie"
    local datadir="/home/pi"
    if [ "$RANDOMIZE" = "disabled" ]; then
        local line="$(head -1 "$config")"
    elif [ "$RANDOMIZE" = "retropie" ]; then
        local line="$(find "$rootdir/supplementary/splashscreen" -type f ! -regex ".*/.git/.*" ! -regex ".*LICENSE" ! -regex ".*README.*" | shuf -n1)"
    elif [ "$RANDOMIZE" = "custom" ]; then
        local line="$(find "$datadir/RetroPie/splashscreens" -type f ! -regex ".*README.*" | shuf -n1)"
    elif [ "$RANDOMIZE" = "all" ]; then
        local line="$( (find "$rootdir/supplementary/splashscreen" -type f ! -regex ".*/.git/.*" ! -regex ".*LICENSE" ! -regex ".*README.*" && find "$datadir/RetroPie/splashscreens" -type f ! -regex ".*README.*") | shuf -n1)"
    elif [ "$RANDOMIZE" = "list" ]; then
        local line="$(cat "$config" | shuf -n1)"
    fi
    if $(echo "$line" | grep -q "$REGEX_VIDEO"); then
        # wait for dbus
        while ! pgrep "dbus" >/dev/null; do
            sleep 1
        done
        omxplayer -b --layer 10000 "$line"
    elif $(echo "$line" | grep -q "$REGEX_IMAGE"); then
        if [ "$RANDOMIZE" = "disabled" ]; then
            local count=$(wc -l <"$config")
        else
            local count=1
        fi
        [ $count -eq 0 ] && count=1
        [ $count -gt 20 ] && count=20
        local delay=$((20/count))
        if [ "$RANDOMIZE" = "disabled" ]; then
            fbi -T 2 -once -t $delay -noverbose -a -l "$config" >/dev/null 2>&1
        else
            fbi -T 2 -once -t $delay -noverbose -a "$line" >/dev/null 2>&1
        fi
    fi
    exit 0
}

case "$1" in
  start|"")
    do_start &
    ;;
  restart|reload|force-reload)
    echo "Error: argument '$1' not supported" >&2
    exit 3
    ;;
  stop)
    # No-op
    ;;
  status)
    exit 0
    ;;
  *)
    echo "Usage: asplashscreen [start|stop]" >&2
    exit 3
    ;;
esac

:
